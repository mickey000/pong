{"version":3,"sources":["constants/actions.js","actions/playground.js","utils/randomMove.js","actions/ball.js","actions/leftPlayer.js","actions/rightPlayer.js","components/Stick.react.js","components/Ball.react.js","components/Banner.react.js","constants/keysMap.js","constants/directions.js","components/Playground.react.js","components/Header.react.js","components/App.react.js","utils/getNewPosition.js","middlewares/sagas/updatePosition.js","utils/checkCollision.js","middlewares/sagas/checkCollision.js","middlewares/sagas/index.js","reducers/gameState.js","store.js","reducers/ball.js","reducers/leftPlayer.js","reducers/rightPlayer.js","reducers/index.js","index.js"],"names":["SET_WINNER","UPDATE_POSITIONS","SET_BALL_MOVE","SET_BALL_POSITION","SET_RIGHT_POSITION","SET_LEFT_POSITION","CHECK_COLLISION","playground","startRound","type","setPause","updatePositions","resetPositions","directions","randomMove","Math","round","random","actions_ball","setBallMove","moveX","moveY","actions_leftPlayer","setLeftMove","actions_rightPlayer","setRightMove","Stick","_ref","_this$props","this","props","side","position","Object","defineProperty","getPosition","react_default","a","createElement","className","style","Component","Ball","_this$props$position","left","x","bottom","y","Banner","message","keysMap","UP","DOWN","W","S","P","R","SPACE","constants_directions","LEFT","RIGHT","ZERO","Playground","shouldUpdatePositions","_this","updatePositionsInterval","clearInterval","setInterval","handleKeyDown","e","keyCode","key","preventDefault","handleKeyUp","window","addEventListener","removeEventListener","leftPosition","rightPosition","ballPosition","banner","bannerMessage","Stick_react","Ball_react","Banner_react","connect","state","gameState","leftPlayer","rightPlayer","ball","pause","dispatch","bindActionCreators","objectSpread","playgroundActions","ballActions","leftPlayerActions","rightPlayerActions","Header","getScore","number","concat","score","undefined","App","Header_react","Playground_react","getNewPlayerPosition","move","newPosition","getNewBallPosition","updatePositionsFunc","ballMoveX","ballMoveY","leftPlayerPosition","leftPlayerMove","rightPlayerPosition","rightPlayerMove","newBallPosition","newLeftPlayerPosition","newRightPlayerPosition","regenerator_default","wrap","_context","prev","next","select","sent","abrupt","all","put","stop","_marked","_context2","takeEvery","_marked2","collision","player","checkBallCollision","lpY","rpY","ballX","ballY","playerCollision","winner","wallCollision","checkCollisionFunc","checkCollision","_checkBallCollision","checkCollision_marked","checkCollision_marked2","sagas","fork","updatePosition","sagas_marked","composeEnhancers","saga","store","initState","gameStateReducer","arguments","length","action","ballReducer","leftPlayerReducer","rightPlayerReducer","pongGame","combineReducers","src_store","compose","createSagaMiddleware","createStore","applyMiddleware","apply","run","sagaMiddleware","ReactDOM","render","es","App_react","document","getElementById"],"mappings":"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","file":"static/js/main.8f37dfea.chunk.js","sourcesContent":["const START_ROUND = 'startRound';\nconst SET_PAUSE = 'setPause';\nconst SET_WINNER = 'setWinner';\n\nconst UPDATE_POSITIONS = 'updatePositions';\nconst RESET_POSITIONS = 'resetPositions';\n\nconst SET_BALL_MOVE = 'setBallMove';\nconst SET_BALL_POSITION = 'setBallPosition';\n\nconst SET_RIGHT_MOVE = 'setRightMove';\nconst SET_RIGHT_POSITION = 'setRightPosition';\n\nconst SET_LEFT_MOVE = 'setLeftMove';\nconst SET_LEFT_POSITION = 'setLeftPosition';\n\nconst CHECK_COLLISION = 'checkCollision';\n\nexport {\n    START_ROUND,\n    SET_PAUSE,\n    SET_WINNER,\n\n    UPDATE_POSITIONS,\n    RESET_POSITIONS,\n\n    SET_BALL_MOVE,\n    SET_BALL_POSITION,\n\n    SET_RIGHT_MOVE,\n    SET_RIGHT_POSITION,\n\n    SET_LEFT_MOVE,\n    SET_LEFT_POSITION,\n\n    CHECK_COLLISION\n};","import { START_ROUND, UPDATE_POSITIONS, RESET_POSITIONS, SET_PAUSE } from 'constants/actions';\n\nexport default {\n    startRound: () => ({ type: START_ROUND }),\n    setPause: () => ({ type: SET_PAUSE }),\n    updatePositions: () => ({ type: UPDATE_POSITIONS }),\n    resetPositions: () => ({ type: RESET_POSITIONS })\n}","const directions = [-1, 1];\n\nexport default () => {\n    return directions[Math.round(Math.random())];\n}","import { SET_BALL_MOVE } from 'constants/actions';\nimport randomMove from 'utils/randomMove';\n\nexport default {\n    setBallMove: (moveX, moveY) => {\n\n        return {\n            type: SET_BALL_MOVE,\n            moveX: moveX || randomMove(),\n            moveY: moveY || randomMove()\n        }\n    }\n}","import { SET_LEFT_MOVE } from 'constants/actions';\n\nexport default {\n    setLeftMove: moveY => ({ type: SET_LEFT_MOVE, moveY})\n}","import { SET_RIGHT_MOVE } from 'constants/actions';\n\nexport default {\n    setRightMove: moveY => ({ type: SET_RIGHT_MOVE, moveY })\n}","import React, { Component } from 'react';\n\nclass Stick extends Component {\n\n    getPosition() {\n        const { side, position } = this.props;\n\n        return {\n            [side]: 0,\n            bottom: position\n        };\n    }\n\n    render() {\n        const position = this.getPosition();\n\n        return (\n            <div className=\"stick\" style={position}/>\n        );\n    }\n}\n\nexport default Stick;\n","import React, { Component } from 'react';\n\nclass Ball extends Component {\n\n    getPosition() {\n        const { position: { x, y } } = this.props;\n\n        return {\n            left: x,\n            bottom: y\n        };\n    }\n\n    render() {\n        const position = this.getPosition();\n\n        return (\n            <div className=\"ball\" style={position}/>\n        );\n    }\n}\n\nexport default Ball;\n","import React, { Component } from 'react';\n\nclass Banner extends Component {\n\n    render() {\n        const { message } = this.props;\n\n        return (\n            <div className=\"banner-wrapper\">\n                <div className=\"banner\">\n                    <p className=\"message\">{message}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Banner;\n","export default {\n    UP: 38,\n    DOWN: 40,\n    W: 87,\n    S: 83,\n    P: 80,\n    R: 82,\n    SPACE: 32\n};","export default {\n    UP: 1,\n    DOWN: -1,\n    LEFT: -1,\n    RIGHT: 1,\n    ZERO: 0\n};","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport playgroundActions from 'actions/playground';\nimport ballActions from 'actions/ball';\nimport leftPlayerActions from 'actions/leftPlayer';\nimport rightPlayerActions from 'actions/rightPlayer';\nimport Stick from 'components/Stick.react';\nimport Ball from 'components/Ball.react';\nimport Banner from 'components/Banner.react';\nimport key from 'constants/keysMap';\nimport directions from 'constants/directions';\n\nclass Playground extends Component {\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown)\n        window.addEventListener('keyup', this.handleKeyUp)\n\n        this.updatePositions();\n    }\n     \n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown)\n        window.removeEventListener('keyup', this.handleKeyUp)\n    }\n\n    componentDidUpdate() {\n        this.updatePositions();        \n    }\n\n    updatePositions = () => {\n        const { shouldUpdatePositions } = this.props;\n\n        if (!shouldUpdatePositions && this.updatePositionsInterval) {\n            clearInterval(this.updatePositionsInterval);\n            delete this.updatePositionsInterval;\n\n            return;\n        }\n            \n        if (shouldUpdatePositions && !this.updatePositionsInterval)\n            this.updatePositionsInterval = setInterval(this.props.updatePositions, 1000/60);\n\n    }\n\n    handleKeyDown = (e) => {\n        switch(e.keyCode) {\n            case key.W:\n                e.preventDefault();\n                this.props.setLeftMove(directions.UP);\n                return;\n            case key.S:\n                e.preventDefault();\n                this.props.setLeftMove(directions.DOWN);\n                return;\n            case key.UP:\n                e.preventDefault();\n                this.props.setRightMove(directions.UP);\n                return;\n            case key.DOWN:\n                e.preventDefault();\n                this.props.setRightMove(directions.DOWN);\n                return;\n            case key.SPACE:\n                e.preventDefault();\n                if (!this.props.round) {\n                    this.props.resetPositions();\n                    this.props.startRound();\n                    this.props.setBallMove();\n\n                    return;\n                }\n\n                if (this.props.round) {\n                    this.props.setPause();\n\n                    return;\n                }\n                \n                return;\n            default:\n                return;\n        }\n    }\n\n    handleKeyUp = (e) => {\n        switch(e.keyCode) {\n            case key.W:\n            case key.S:\n                e.preventDefault();\n                this.props.setLeftMove(directions.ZERO);\n                return;\n            case key.UP:\n            case key.DOWN:\n                e.preventDefault();\n                this.props.setRightMove(directions.ZERO);\n                return;\n            default:\n                return;\n        }\n    }\n\n    render() {\n        const { leftPosition, rightPosition, ballPosition, banner, bannerMessage } = this.props;\n\n        return (\n            <div className='playground'>\n                <Stick side='left' position={leftPosition} />\n                <Stick side='right' position={rightPosition} />\n                <Ball position={ballPosition} />\n                {banner && <Banner message={bannerMessage}/>}\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => {\n        const { gameState, leftPlayer, rightPlayer, ball } = state;\n\n        return {\n            leftPosition: leftPlayer.position,\n            rightPosition: rightPlayer.position,\n            ballPosition: ball.position,\n            shouldUpdatePositions:\n                (gameState.round && !gameState.pause) &&\n                (leftPlayer.moveY || rightPlayer.moveY || ball.moveX || ball.moveY),\n            banner: gameState.banner,\n            bannerMessage: gameState.bannerMessage,\n            pause: gameState.pause,\n            round: gameState.round\n        };\n    },\n    dispatch => bindActionCreators({\n        ...playgroundActions,\n        ...ballActions,\n        ...leftPlayerActions,\n        ...rightPlayerActions\n    }, dispatch)\n)(Playground);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n\n    getScore = number => number < 10 ? `0${number}` : number;\n\n    render() {\n        const { score } = this.props;\n\n        return (\n            <header className=\"header\">\n                <div className='section left'>\n                    <div className='line player-name'>PLAYER 01</div>\n                    <div className='line player-score'>SCORE: {this.getScore(score.leftPlayer)}</div>\n                </div>\n                <div className='section right'>\n                    <div className='line player-name'>PLAYER 02</div>\n                    <div className='line player-score'>SCORE: {this.getScore(score.rightPlayer)}</div>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        score: state.gameState.score\n    }),\n    undefined\n)(Header);","import React, { Component } from 'react';\nimport Playground from 'components/Playground.react';\nimport Header from 'components/Header.react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <Playground />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const PLAYER_SPEED = 320/60;\nconst BALL_SPEED = PLAYER_SPEED * 1;\n\nconst MIN_PLAYER_POSITION = 0;\nconst MAX_PLAYER_POSITION = 320;\n\nconst getNewPlayerPosition = (position, move) => {\n    const newPosition = position + (move * PLAYER_SPEED);\n\n    if (newPosition < MIN_PLAYER_POSITION) return MIN_PLAYER_POSITION;\n    else if (newPosition > MAX_PLAYER_POSITION) return MAX_PLAYER_POSITION;\n\n    return newPosition;\n}\n\nconst getNewBallPosition = (position, moveX, moveY) => {\n    return {\n        x: position.x + (moveX * BALL_SPEED),\n        y: position.y + (moveY * BALL_SPEED),\n    };\n}\n\nexport {\n    getNewPlayerPosition,\n    getNewBallPosition\n}","import { UPDATE_POSITIONS, SET_BALL_POSITION, SET_LEFT_POSITION, SET_RIGHT_POSITION, CHECK_COLLISION } from 'constants/actions';\nimport { takeEvery, all, put, select } from 'redux-saga/effects';\nimport { getNewBallPosition, getNewPlayerPosition } from 'utils/getNewPosition';\n\nfunction * updatePositionsFunc () {\n    const { gameState, ball, leftPlayer, rightPlayer } = yield select();\n\n    if (!gameState.round || gameState.pause) return;\n\n    const ballPosition = ball.position;\n    const ballMoveX = ball.moveX;\n    const ballMoveY = ball.moveY;\n\n    const leftPlayerPosition = leftPlayer.position;\n    const leftPlayerMove = leftPlayer.moveY;\n\n    const rightPlayerPosition = rightPlayer.position;\n    const rightPlayerMove = rightPlayer.moveY;\n\n    const newBallPosition = getNewBallPosition(ballPosition, ballMoveX, ballMoveY);\n    const newLeftPlayerPosition = getNewPlayerPosition(leftPlayerPosition, leftPlayerMove);\n    const newRightPlayerPosition = getNewPlayerPosition(rightPlayerPosition, rightPlayerMove);\n\n    yield all([\n        put({ type: SET_BALL_POSITION, position: newBallPosition }),\n        put({ type: SET_LEFT_POSITION, position: newLeftPlayerPosition }),\n        put({ type: SET_RIGHT_POSITION, position: newRightPlayerPosition })\n    ]);\n\n    yield put({ type: CHECK_COLLISION });\n}\n\nexport default function* updatePositions() {\n    yield takeEvery(UPDATE_POSITIONS, updatePositionsFunc);\n}","const BALL = 20;\nconst PLAYER = 80;\n\nconst MIN_BALL_X_POSITION = 20;\nconst MAX_BALL_X_POSITION = 760;\nconst MIN_BALL_Y_POSITION = 0;\nconst MAX_BALL_Y_POSITION = 380;\n\nconst LEFT_PLAYER_LOOSE = 0;\nconst RIGHT_PLAYER_LOOSE = 780;\n\nconst collision = (ball, player) => {\n    if ((ball + BALL) <= player) return false; // below\n    if (ball >= (player + PLAYER)) return false; // above\n\n    return true;\n}\n\nconst checkBallCollision = (ballPosition, lpY, rpY) => {\n    const { x: ballX, y: ballY } = ballPosition;\n\n    if (ballX <= MIN_BALL_X_POSITION) {\n        const playerCollision = collision(ballY, lpY);\n\n        if (playerCollision) {\n            return { playerCollision };\n        }\n        \n        if (ballX <= LEFT_PLAYER_LOOSE) {\n            return { winner: 'rightPlayer' };\n        }\n    }\n\n    if (ballX >= MAX_BALL_X_POSITION) {\n        const playerCollision = collision(ballY, rpY);\n\n        if (playerCollision) {\n            return { playerCollision };\n        }\n        \n        if (ballX >= RIGHT_PLAYER_LOOSE) {\n            return { winner: 'leftPlayer' };\n        }\n    }\n\n    if (ballY <= MIN_BALL_Y_POSITION || ballY >= MAX_BALL_Y_POSITION) {\n        return { wallCollision: true };\n    }\n\n    return {};\n}\n\nexport {\n    checkBallCollision\n}","import { CHECK_COLLISION, SET_BALL_MOVE, SET_WINNER } from 'constants/actions';\nimport { takeEvery, put, select } from 'redux-saga/effects';\nimport { checkBallCollision } from 'utils/checkCollision';\n\nfunction * checkCollisionFunc () {\n    const { ball, leftPlayer, rightPlayer } = yield select();\n\n    const ballMoveX = ball.moveX;\n    const ballMoveY = ball.moveY;\n    const ballPosition = ball.position;\n    const leftPlayerPosition = leftPlayer.position;\n    const rightPlayerPosition = rightPlayer.position;\n   \n    const { winner, playerCollision, wallCollision } = checkBallCollision(ballPosition, leftPlayerPosition, rightPlayerPosition);\n\n    if (winner) {\n        yield put({ type: SET_WINNER, winner});\n    } else if (playerCollision) {\n        yield put({ type: SET_BALL_MOVE, moveX: ballMoveX * -1, moveY: ballMoveY });\n    } else if (wallCollision) {\n        yield put({ type: SET_BALL_MOVE, moveX: ballMoveX, moveY: ballMoveY * -1 });\n    }\n}\n\nexport default function * checkCollision() {\n    yield takeEvery(CHECK_COLLISION, checkCollisionFunc);\n}","import { fork } from 'redux-saga/effects'\nimport updatePosition from 'middlewares/sagas/updatePosition';\nimport checkCollision from 'middlewares/sagas/checkCollision';\n\nexport default function* sagas() {\n    yield [\n        fork(updatePosition),\n        fork(checkCollision)\n    ]\n}","import { START_ROUND, SET_PAUSE, SET_WINNER } from 'constants/actions';\n\nconst initState = {\n    round: false,\n    pause: false,\n    banner: true,\n    bannerMessage: 'PRESS SPACE TO START GAME',\n    score: {\n        leftPlayer: 0,\n        rightPlayer: 0\n    }\n};\n\nconst gameStateReducer = (state = initState, action) => {\n    switch (action.type) {\n      case START_ROUND:\n\n        return {\n            ...state,\n            round: true,\n            banner: false,\n            bannerMessage: ''\n        };\n\n    case SET_PAUSE:\n        if (!state.round) return state;\n\n        return {\n            ...state,\n            pause: !state.pause,\n            banner: !state.pause,\n            bannerMessage: !state.pause ? 'PAUSE' : ''\n        };\n\n    case SET_WINNER:\n\n        const { winner } = action;\n\n        return {\n            round: false,\n            pause: false,\n            banner: true,\n            bannerMessage: `PLAYER ${winner === 'leftPlayer' ? '01' : '02'} WINS`,\n            score: {\n                ...state.score,\n                [winner]: state.score[winner] + 1\n            }\n        };\n\n        default:\n            return state;\n    }\n\n};\n  \n  export default gameStateReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport sagaMiddleware from 'middlewares/sagas';\nimport pongGame from './reducers';\n\nexport default (() => {\n    const composeEnhancers = process.env.NODE_ENV === 'production'\n        ? compose\n        : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const saga = createSagaMiddleware();\n\n    const store = createStore(\n        pongGame,\n        undefined,\n        composeEnhancers(\n            applyMiddleware(...[\n                    saga\n            ])\n        )\n    );\n\n    saga.run(sagaMiddleware);\n\n    return store;\n})();","import { SET_BALL_MOVE, SET_BALL_POSITION, RESET_POSITIONS } from 'constants/actions'\n\nconst initState = {\n    position: {\n        x: (790 - 10) / 2,\n        y: (390 - 10) / 2\n    },\n    moveX: 0,\n    moveY: 0\n};\n\nconst ballReducer = (state = initState, action) => {\n    switch (action.type) {\n\n      case SET_BALL_MOVE:\n        const { moveX, moveY } = action;\n        return {\n            ...state,\n            moveX,\n            moveY\n        };\n\n    case SET_BALL_POSITION:\n        const { position } = action;\n        return {\n            ...state,\n            position\n        };\n\n    case RESET_POSITIONS:\n        return initState;\n\n      default:\n        return state;\n    }\n  };\n  \n  export default ballReducer;","import { SET_LEFT_MOVE, SET_LEFT_POSITION, RESET_POSITIONS } from 'constants/actions';\n\nconst initState = {\n    position: (360 - 40) / 2,\n    moveY: 0\n};\n\nconst leftPlayerReducer = (state = initState, action) => {\n    switch (action.type) {\n      case SET_LEFT_MOVE:\n        const { moveY } = action;\n        return {\n            ...state,\n            moveY\n        };\n\n    case SET_LEFT_POSITION:\n        const { position } = action;\n        return {\n            ...state,\n            position\n        };\n\n    case RESET_POSITIONS:\n        return initState;\n\n      default:\n        return state;\n    }\n  };\n  \n  export default leftPlayerReducer;","import { SET_RIGHT_MOVE, SET_RIGHT_POSITION, RESET_POSITIONS } from 'constants/actions';\n\nconst initState = {\n    position: (360 - 40) / 2,\n    moveY: 0\n};\n\nconst rightPlayerReducer = (state = initState, action) => {\n    switch (action.type) {\n      case SET_RIGHT_MOVE:\n        const { moveY } = action;\n        return {\n            ...state,\n            moveY\n        };\n\n    case SET_RIGHT_POSITION:\n        const { position } = action;\n        return {\n            ...state,\n            position\n        };\n\n    case RESET_POSITIONS:\n        return initState;\n\n      default:\n        return state;\n    }\n  };\n  \n  export default rightPlayerReducer;","import { combineReducers } from 'redux';\nimport gameState from './gameState';\nimport ball from './ball';\nimport leftPlayer from './leftPlayer';\nimport rightPlayer from './rightPlayer';\n\nconst pongGame = combineReducers({\n    gameState,\n    ball,\n    leftPlayer,\n    rightPlayer,\n});\n\nexport default pongGame;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App.react';\nimport store from './store';\n\nimport 'styles/index.css';\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}